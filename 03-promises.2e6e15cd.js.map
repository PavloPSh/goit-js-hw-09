{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAsBA,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IA9BPQ,EAAAZ,GAASa,OAAOC,KAAK,CACnBX,SAAU,eACVY,QAAS,MAGWC,SAASC,cAAc,SAC/BC,iBAAiB,UAG/B,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAaC,OAAOH,EAAMI,OAAOnB,MAAMoB,OACvCC,EAAYH,OAAOH,EAAMI,OAAOG,KAAKF,OACrCG,EAASL,OAAOH,EAAMI,OAAOI,OAAOH,QAqB5C,SAAwBH,EAAYI,EAAWE,GAC7C,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAE,CAElC1B,EAAc0B,EADFP,EAAaI,GAAaG,EAAI,IAEzCC,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBQ,EAAAZ,GAASa,OAAOkB,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAEvE6B,OAAM,SAAAH,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBQ,EAAAZ,GAASa,OAAOqB,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,KA3BvE+B,CAAed,EAAYI,EAAWE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  position: 'right-bottom',\n  timeout: 2000,\n});\n\nconst formContainer = document.querySelector('.form');\nformContainer.addEventListener('submit', onFormSubmit);\n\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const firstDelay = Number(event.target.delay.value);\n  const delayStep = Number(event.target.step.value);\n  const amount = Number(event.target.amount.value);\n  \n  promiseCounter(firstDelay, delayStep, amount)\n  \n};\n\nfunction createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n  \n};\n\nfunction promiseCounter(firstDelay, delayStep, amount) {\n  for (let i = 1; i <= amount; i += 1){\n    let total = firstDelay + delayStep * (i - 1);\n    createPromise(i, total)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n  };\n};\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","init","timeout","document","querySelector","addEventListener","event","preventDefault","firstDelay","Number","target","value","delayStep","step","amount","i","then","param","success","concat","catch","failure","$ce04d3a99e08e73b$var$promiseCounter"],"version":3,"file":"03-promises.2e6e15cd.js.map"}